#!/bin/bash
set -eu
set -o pipefail

function vt_upload()
{
    local malware=$1
    echo "Uploading $malware to VT"
    /Users/todor/go/bin/vt scan file "$MALWARE_DIR/$malware"
}

function vt_scan()
{
    local malware=$1
    /Users/todor/go/bin/vt file "$malware"
}

function contains_vt_result()
{
    remarshal -if yaml -of json $1 | jq '.[].last_analysis_results[]' 
}

function process()
{ 
    local malware=$1
    if [ ! -f "$VT_OUTPUT_DIR/$malware.yaml" ] || [ ! -s "$VT_OUTPUT_DIR/$malware.yaml"  ];
    then
        echo "Processing $malware"
        vt_scan "$malware" > "$VT_OUTPUT_DIR/$malware.yaml" | egrep "^File.* not found$" || vt_upload $malware
    elif ! contains_vt_result "$VT_OUTPUT_DIR/$malware.yaml";
    then
        echo "Refreshing $malware from VT"
        vt_scan "$malware" > "$VT_OUTPUT_DIR/$malware.yaml"
    else
        echo "$malware has already been processed"
    fi  
}

MALWARE_DIR='/Users/todor/Code/Masters-Thesis-Code/malware-samples'
VT_OUTPUT_DIR="$MALWARE_DIR/vt-yaml"
[ ! -d "$VT_OUTPUT_DIR" ] && mkdir $VT_OUTPUT_DIR
MALWARES=$(find $MALWARE_DIR -d 1 -type f -not -name '.gitignore' | sed 's#.*/##')
for malware in $MALWARES;do
   process $malware
done
    
