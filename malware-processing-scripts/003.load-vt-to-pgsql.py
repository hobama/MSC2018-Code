#!/usr/bin/env python
import os
import psycopg2
import json
import yaml
yaml_path='/Users/todor/Code/Masters-Thesis-Code/malware-samples/vt-yaml'
type_path='/Users/todor/Code/Masters-Thesis-Code/malware-samples/mime-type'
files = os.listdir(yaml_path)
conn=psycopg2.connect("user='todor'")
cur = conn.cursor()
for f in files:
    vt_report = yaml.load(open(os.path.join(yaml_path, f),'r').read())[0]
    json_report = json.dumps(vt_report, sort_keys=False)
    sha256_sum = f.split('.')[0]
    malware_type = open(os.path.join(type_path, sha256_sum),'r').read().strip()
    try:
       cur.execute("INSERT INTO malware_report (sha256, vt_report, type) VALUES (%s, %s, %s)",(sha256_sum, json_report, malware_type))
       conn.commit()
    except:
        print(f)
        exit(1)
sort_sql='''
update malware_report set platform='ARM' where type LIKE '%ARM%';
update malware_report set platform='ASCII' where type LIKE '%ASCII%';
update malware_report set platform='ASCII' where type LIKE '%Bourne%';
update malware_report set platform='ASCII' where type LIKE '%Shell%';
update malware_report set platform='ASCII' where type LIKE '%shell script%';
update malware_report set platform='ASCII' where type LIKE '%ISO-8859 text%';
update malware_report set platform='ASCII' where type LIKE '%/usr/bin/perl%';
update malware_report set platform='ASCII' where type LIKE '%UTF-8 Unicode%';
update malware_report set platform='x86' where type LIKE '%80386%';
update malware_report set platform='x86' where type LIKE '%x86-64%';
update malware_report set platform='MIPS' where type LIKE '%MIPS%';
update malware_report set platform='M68K' where type LIKE '%m68k%';
update malware_report set platform='PowerPC' where type LIKE '%PowerPC%';
update malware_report set platform='SPARC' where type LIKE '%SPARC%';
update malware_report set platform='SH4' where type LIKE '%Renesas%';
update malware_report set platform='gzip' where type LIKE '%gzip%';
update malware_report set platform='unknown' where type='data';
update malware_report set platform='unknown' where type='OpenSSH RSA public key';
'''
cur.execute(sort_sql)
conn.close()
